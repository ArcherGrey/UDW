import { leetcodeItem as item } from "../common.js";
const parent = {
  id: "10.2",
  path: "./docs/Algorithm/leetcode/"
};

export const leetcode = {
  id: "10.2",
  label: "leetcode题解",
  children: [
    item(parent, 1, "两数之和"),
    item(parent, 5, "最长回文子串"),
    item(parent, 9, "回文数"),
    item(parent, 15, "三数之和"),
    item(parent, 16, "最接近的三数之和"),
    item(parent, 20, "有效的括号"),
    item(parent, 26, "删除排序数组中的重复项"),
    item(parent, 27, "移除元素"),
    item(parent, 33, "搜索旋转排序数组"),
    item(parent, 35, "搜索插入位置"),
    item(parent, 41, "缺失的第一个正数"),
    item(parent, 44, "通配符匹配"),
    item(parent, 50, "Pow(x,n)"),
    item(parent, 53, "最大子序和"),
    item(parent, 66, "加一"),
    item(parent, 67, "二进制求和"),
    item(parent, 69, "x 的平方根"),
    item(parent, 70, "爬楼梯"),
    item(parent, 76, "最小覆盖子串"),
    item(parent, 84, "柱状图中最大的矩形"),
    item(parent, 88, "合并两个有序数组"),
    item(parent, 94, "二叉树中序遍历"),
    item(parent, 96, "不同的二叉搜索树"),
    item(parent, 100, "相同的树"),
    item(parent, 101, "对称二叉树"),
    item(parent, 104, "二叉树的最大深度"),
    item(parent, 105, "从前序与中序遍历序列构造二叉树"),
    item(parent, 107, "二叉树的层次遍历 II"),
    item(parent, 108, "将有序数组转换为二叉搜索树"),
    item(parent, 110, "平衡二叉树"),
    item(parent, 111, "二叉树的最小深度"),
    item(parent, 112, "路径总和"),
    item(parent, 118, "杨辉三角"),
    item(parent, 119, "杨辉三角 II"),
    item(parent, 120, "三角形最小路径和"),
    item(parent, 121, "买卖股票的最佳时机"),
    item(parent, 122, "买卖股票的最佳时机 II"),
    item(parent, 125, "验证回文串"),
    item(parent, 133, "克隆图"),
    item(parent, 136, "只出现一次的数字"),
    item(parent, 146, "LRU 缓存机制"),
    item(parent, 150, "逆波兰表达式求值"),
    item(parent, 152, "乘积最大子数组"),
    item(parent, 155, "最小栈"),
    item(parent, 167, "两数之和 II - 输入有序数组"),
    item(parent, 169, "多数元素"),
    item(parent, 189, "旋转数组"),
    item(parent, 198, "打家劫舍"),
    item(parent, 200, "岛屿数量"),
    item(parent, 202, "快乐数"),
    item(parent, 209, "长度最小的子数组"),
    item(parent, 215, "数组中的第 K 个最大元素"),
    item(parent, 217, "存在重复元素"),
    item(parent, 219, "存在重复元素 II"),
    item(parent, 221, "最大正方形"),
    item(parent, 226, "翻转二叉树"),
    item(parent, 235, "二叉搜索树的最近公共祖先"),
    item(parent, 238, "除自身以外数组的乘积"),
    item(parent, 243, "最短单词距离"),
    item(parent, 256, "粉刷房子"),
    item(parent, 257, "二叉树的所有路径"),
    item(parent, 268, "缺失数字"),
    item(parent, 270, "最接近的二叉搜索树值"),
    item(parent, 276, "栅栏涂色"),
    item(parent, 279, "完全平方数"),
    item(parent, 283, "移动零"),
    item(parent, 287, "寻找重复数"),
    item(parent, 297, "二叉树的序列化与反序列化"),
    item(parent, 303, "区域和检索 - 数组不可变"),
    item(parent, 309, "最佳买卖股票时机含冷冻期"),
    item(parent, 349, "两个数组的交集"),
    item(parent, 350, "两个数组的交集 II"),
    item(parent, 378, "有序矩阵中第K小的元素"),
    item(parent, 392, "判断子序列"),
    item(parent, 394, "字符串解码"),
    item(parent, 404, "左叶子之和"),
    item(parent, 414, "第三大的数"),
    item(parent, 448, "找到所有数组中消失的数字"),
    item(parent, 485, "最大连续1的个数"),
    item(parent, 494, "目标和"),
    item(parent, 509, "斐波那契数"),
    item(parent, 532, "数组中的 K-diff 数对"),
    item(parent, 560, "和为k的子数组"),
    item(parent, 561, "数组拆分 I"),
    item(parent, 566, "重塑矩阵"),
    item(parent, 572, "另一个树的子树"),
    item(parent, 581, "最短无序连续子数组"),
    item(parent, 605, "种花问题"),
    item(parent, 624, "数组列表中的最大距离"),
    item(parent, 628, "三个数的最大乘积"),
    item(parent, 680, "验证回文字符串 Ⅱ"),
    item(parent, 718, "最长重复子数组"),
    item(parent, 725, "打开转盘锁"),
    item(parent, 739, "每日温度"),
    item(parent, 785, "判断二分图"),
    item(parent, 821, "新21点"),
    item(parent, 974, "和可被 K 整除的子数组"),
    item(parent, 983, "最低票价"),
    item(parent, 990, "等式方程的可满足性"),
    item(parent, 1014, "最佳观光组合"),
    item(parent, 1025, "除数博弈"),
    item(parent, 1028, "从先序遍历还原二叉树"),
    item(parent, 1095, "山脉数组中查找目标值"),
    item(parent, 1371, "每个元音包含偶数次的最长子字符串"),
    item(parent, 1431, "拥有最多糖果的孩子"),
    item(parent, "i29", "顺时针打印矩阵"),
    item(parent, "i46", "把数字翻译成字符串"),
    item(parent, "i51", "数组中的逆序对"),
    item(parent, "i56", "I. 数组中数字出现的次数"),
    item(parent, "i64", "求 1+2+…+n")
  ]
};
